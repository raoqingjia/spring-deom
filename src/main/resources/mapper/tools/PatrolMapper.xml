<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bboss.tools.dao.tools.PatrolMapper">

    <resultMap id="patrolCategoryMap" type="com.bboss.tools.bo.PatrolCategory">
        <id column="category_id" property="categoryId" />
        <result column="category_desc" property="categoryDesc" />
        <result column="create_time" property="createTime" />
        <result column="create_by" property="createBy" />
    </resultMap>

    <resultMap id="patrolItemMap" type="com.bboss.tools.bo.PatrolItem">
        <id column="item_id" property="itemId" />
        <result column="category_id" property="categoryId" />
        <result column="item_desc" property="itemDesc" />
        <result column="item_sql" property="itemSql" />
        <result column="source_flag" property="sourceFlag" />
        <result column="threshold_value" property="thresholdValue" />
        <result column="threshold_operator" property="thresholdOperator" />
        <result column="threshold_type" property="thresholdType" />
        <result column="create_time" property="createTime" />
        <result column="create_by" property="createBy" />
    </resultMap>

    <resultMap id="patrolParamMap" type="com.bboss.tools.bo.PatrolParam">
        <id column="param_id" property="paramId" />
        <result column="item_id" property="itemId" />
        <result column="param_name" property="paramName" />
        <result column="param_sql" property="paramSql" />
        <result column="param_type" property="paramType" />
        <result column="create_time" property="createTime" />
        <result column="create_by" property="createBy" />
    </resultMap>

    <select id="qryEffectiveCategory" resultMap="patrolCategoryMap">
        select category_id, category_desc, create_time, create_by
        from abs_tools.patrol_category where enabled_flag = 1
        <if test="categoryId != null and categoryId != ''">
            and category_id = #{categoryId}
        </if>
        order by display_order
    </select>

    <select id="qryEffectiveItemByCategoryId" resultMap="patrolItemMap">
        select item_id,
               category_id,
               item_desc,
               item_sql,
               source_flag,
               threshold_value,
               threshold_operator,
               threshold_type,
               create_time,
               create_by
        from abs_tools.patrol_item
        where enabled_flag = 1 and category_id = #{categoryId}
        order by display_order
    </select>

    <insert id="batchInsertPatrolReport" useGeneratedKeys="false">

        insert into abs_tools.patrol_report (report_id, log_id, category_id, category_desc, item_id, item_desc,
                                             item_result,item_exc_sql,threshold_operator,threshold_value,item_status,
                                             error_desc, consuming_time, create_time)
        values
           <foreach collection="patrolReports" item="item" index="index" separator=",">
               (#{item.reportId},#{item.logId},#{item.categoryId},#{item.categoryDesc},#{item.itemId},
               #{item.itemDesc},#{item.itemResult},#{item.itemExcSql},#{item.thresholdOperator},#{item.thresholdValue},
               #{item.itemStatus},#{item.errorDesc},#{item.consumingTime}, now())
           </foreach>

    </insert>

    <select id="qryParamByItemId" resultMap="patrolParamMap">
        select param_id,
               item_id,
               param_name,
               param_sql,
               param_type,
               create_time,
               create_by
        from abs_tools.patrol_param where enabled_flag = 1 and item_id = #{itemId}
    </select>

    <select id="excuteParamSQL" resultType="string">
        ${paramSql}
    </select>

    <insert id="insertPatrolLog" parameterType="com.bboss.tools.bo.PatrolLog" useGeneratedKeys="false">
        insert into abs_tools.patrol_log (log_id, patrol_range, patrol_status, error_desc, mail_status,
                                          mail_recipient, mail_carboncopy, mail_content, start_time,
                                          end_time, create_time)
        values (#{logId}, #{patrolRange}, #{patrolStatus}, #{errorDesc}, #{mailStatus},
                #{mailRecipient}, #{mailCarboncopy}, #{mailContent}, #{startTime}, #{endTime},
                now())
    </insert>
    <update id="updPatrolLogByLogId" parameterType="com.bboss.tools.bo.PatrolLog" useGeneratedKeys="false">
        update abs_tools.patrol_log
            set patrol_status = #{patrolStatus}, error_desc = #{errorDesc}, mail_status = #{mailStatus},
                mail_recipient = #{mailRecipient}, mail_carboncopy = #{mailCarboncopy}, mail_content = #{mailContent},
                end_time = #{endTime}
        where log_id = #{logId}
    </update>


</mapper>
